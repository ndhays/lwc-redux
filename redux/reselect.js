/* eslint-disable */
function defaultEqualityCheck(c,a){return c===a}function areArgumentsShallowlyEqual(a,b,c){if(null===b||null===c||b.length!==c.length)return!1;for(var d=b.length,e=0;e<d;e++)if(!a(b[e],c[e]))return!1;return!0}function defaultMemoize(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:defaultEqualityCheck,c=null,d=null;return function(){return areArgumentsShallowlyEqual(b,c,arguments)||(d=a.apply(null,arguments)),c=arguments,d}}function getDependencies(a){var b=Array.isArray(a[0])?a[0]:a;if(!b.every(function(a){return"function"==typeof a})){var c=b.map(function(a){return typeof a}).join(", ");throw new Error("Selector creators expect all input-selectors to be functions, instead received the following types: ["+c+"]")}return b}function createSelectorCreator(a){for(var b=arguments.length,c=Array(1<b?b-1:0),d=1;d<b;d++)c[d-1]=arguments[d];return function(){for(var b=arguments.length,d=Array(b),e=0;e<b;e++)d[e]=arguments[e];var f=0,g=d.pop(),h=getDependencies(d),j=a.apply(void 0,[function(){return f++,g.apply(null,arguments)}].concat(c)),k=a(function(){for(var a=[],b=h.length,c=0;c<b;c++)a.push(h[c].apply(null,arguments));return j.apply(null,a)});return k.resultFunc=g,k.dependencies=h,k.recomputations=function(){return f},k.resetRecomputations=function(){return f=0},k}}var createSelector=createSelectorCreator(defaultMemoize);export{createSelector};
